papiex version                : 1.0.3
papiex build                  : Sep 28 2019/14:58:05
Executable                    : /home/haomeng/Projects/LLVMSlicing/test/NPB3.0-omp-C/bin/ep.B
Processor                     : Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz
Clockrate (MHz)               : 2301.000000
Hostname                      : parallelgroup
Options                       : MULTIPLEX,MEMORY,PAPI_TOT_INS,PAPI_LST_INS,PAPI_BR_INS,PAPI_LD_INS,PAPI_SR_INS,PAPI_TOT_CYC,PAPI_RES_STL,PAPI_L1_DCM,PAPI_L1_ICM,PAPI_TLB_DM,PAPI_TLB_IM,PAPI_L2_DCM,PAPI_L2_ICM,PAPI_CA_INV,PAPI_STL_ICY,PAPI_FUL_ICY,PAPI_BR_CN,PAPI_BR_MSP,PAPI_L2_DCA,PAPI_L2_ICA,NO_MPI_PROF,NO_IO_PROF,NO_THREADSYNC_PROF,NEXTGEN
Domain                        : User
Process id                    : 29894
Session id                    : 25464
Parent process id             : 29893
Num. of threads               : 1
Start                         : Sun Sep 29 10:46:44 2019
Finish                        : Sun Sep 29 10:50:25 2019
Num. of tasks                 : 1
Process (PID 29894) derived data:

IPC ..........................................  1.05961e+00
Load Store Ratio .............................  2.44928e+00
Instructions Per Dcache Miss .................  4.84235e+02

Time:
Wallclock seconds ............................  2.20490e+02
No Issue Stall seconds .......................  2.09708e+00
Resource Stall seconds .......................  6.93386e+01

Cycles:
Cycles In Domain .............................  2.62441e+11
Real Cycles ..................................  5.07121e+11
Running Time In Domain % .....................  5.17512e+01
Virtual Cycles ...............................  5.07331e+11

Instructions:
Total Instructions ...........................  2.78085e+11
Memory Instructions % ........................  3.18486e+01
Memory Instructions % ........................  3.18486e+01
Branch Instructions % ........................  7.36522e+00

Memory:
Load Store Ratio .............................  2.44928e+00
L1 Data Misses Per 1000 Load Stores ..........  6.48415e+00
L1 Data Misses Per 1000 Load Stores ..........  6.48415e+00
L1 Instruction Misses Per 1000 Instructions ..  1.16822e-02
L2 Data Misses Per 1000 L2 Load Stores .......  1.68313e+03
L2 Instruction Misses Per 1000 L2 Instructions   9.63401e+02
Data TLB Misses Per 1000 Load Stores .........  5.58680e-04
Instruction TLB Misses Per 1000 Instructions .  4.18542e-04

Stalls:
Resource Stall Cycles % ......................  6.07938e+01

No Issue Cycle % .............................  1.83865e+00
Full Issue Cycle % ...........................  2.32722e+01
Branch Misprediction % .......................  4.24371e+00

Arch Parameters:

-------------------------------------------------------------------------------
Default spec file ($Id: papi 359 2012-01-06 09:21:17Z tushar $)

Metric Descriptions:
Unless mentioned otherwise, counts are accumulated across sub-processes/threads

MFLOPS wallclock              : Millions of floating point ops per 
                                *wallclock* second
                                PAPI_FP_OPS/WALL_CLOCK_USEC
MFLOPS                        : Millions of FP ops per second
                                PAPI_FP_OPS / Real_usecs
IPC                           : Instructions retired per cycle
                                PAPI_TOT_INS / PAPI_TOT_CYC
Flops Per Load_Store          : PAPI_FP_OPS / PAPI_LST_INS
Flops Per L1 Data Cache Miss  : PAPI_FP_OPS / PAPI_L1_DCM
Load Store Ratio              : Ratio of loads to stores.
                                PAPI_LD_INS / PAPI_SR_INS
Instructions Per Dcache Miss  : PAPI_TOT_INS / PAPI_L1_DCM

Wallclock seconds             : Unhalted wallclock time. Never counted twice.
                                WALL_CLOCK_USEC / 1000000
IO seconds                    : Time spent in seconds doing I/O.
                                This includes any time in I/O, including time
                                outside domain, when the process is waiting
                                for I/O to complete.
                                IO cycles / (Clock Hz)
No Issue Stall seconds        : Time in domain with no instruction issue.
                                This would not include cycles outside domain
                                such as system time or I/O time or time process
                                was not scheduled to run.
                                PAPI_STL_ICY / (Clock Hz)
Resource Stall seconds        : Time in seconds stalled on any resource.
                                Resource can be an integer or FP register
                                or reservation station. It would not include
                                stalls waiting for memory operands.
                                PAPI_RES_STL / (Clock Hz)
FP Stall seconds              : Floating-point stall seconds.
                                PAPI_FP_OPS / (Clock Hz)
Memory Stall seconds          : Time in seconds waiting for memory operations.
                                PAPI_MEM_SCY / (Clock Hz)
Max L1 Miss L2 Hit Stall sec  : Maximum time in stalls on L1 miss/L2 hits.
                                This is an estimate calculated using L1 and L2
                                cache hits and the L2 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                (PAPI_LI_DCM-PAPI_L2_DCM)*L2_LATENCY/(Clock Hz)
Max L2 Miss L3 Hit Stall sec  : Maximum time in stalls on L2 miss/L3 hits.
                                This is an estimate calculated using L2 and L3
                                cache hits and the L3 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                (PAPI_L2_DCM-PAPI_L3_DCM)*L3_LATENCY/(Clock Hz)
Max Memory Access Stall_sec   : Maximum time in stalls waiting on memory
                                This is an estimate calculated using L3 cache
                                misses and the L3 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                PAPI_L3_DCM * MEM_LATENCY / (Clock Hz)

Cycles In Domain              : Total processor cycles in the PAPI domain 
                                PAPI_TOT_CYC. Note, this cycle counter is
                                more granular and accurate than Real or Virtual
                                cycles counter. This may lead to situations where
                                this value is measured as higher than even Real
                                cycles.
Real Cycles                   : Always counted, unhalted.
Running Time In Domain %      : Percent of processor time spent in the domain
                                100 * PAPI_TOT_CYC / Real cycles
Virtual Cycles                : Counted only when executing on the processor. 
IO Cycles %                   : Percent of cycles spent in I/O
                                100 * IO cycles / Real cycles
MPI Cycles %                  : Percent of cycles spent in MPI
                                100 * MPI cycles / Real cycles
MPI Sync Cycles %             : Percent of cycles spent in MPI sync ops
                                100 * MPI Sync cycles / Real cycles
Thread Sync Cycles %          : Percent of cycles spent in thread synchronization
                                100 * Thr Sync cycles / Real cycles

Total Instructions            : Completed instructions
                                PAPI_TOT_INS
Memory Instructions %         : Percent of instructions that are memory
                              : 100 * PAPI_LST_INS / PAPI_TOT_INS
                                or 100 * (PAPI_LD_INS + PAPI_SR_INS) / PAPI_TOT_INS
FP Instructions %             : Percent of instructions that are floating point
                                100 * PAPI_FP_INS / PAPI_TOT_INS
FP Instructions % approx      : Approximate FP instruction percent, using
                                FP ops instead of instructions
                                100 * PAPI_FP_OPS / PAPI_TOT_INS
Branch Instructions %         : Percent of instructions that are branches
                                100 * PAPI_BR_INS / PAPI_TOT_INS
Integer Instructions %        : Percent of instructions that are of integer type
                                100 * PAPI_INT_INS / PAPI_TOT_INS

Load Store Ratio              : Ratio of loads to stores
                                PAPI_LD_INS / PAPI_SR_INS
L1 Data Misses Per 1000 LD/ST : L1 data misses per thousand L1 data references
                                1000 * PAPI_L1_DCM / $PAPI_LST_INS
                                or 1000 * PAPI_L1_DCM / PAPI_L1_DCA
L1 Instruction Misses Per 1000: L1 I-cache misses per thousand instructions
                                1000 * PAPI_L1_ICM / PAPI_TOT_INS
L2 Data Misses Per 1000       : L2 data cache misses per thousand L2 data references
                                1000 * PAPI_L2_DCM / PAPI_L2_DCA
L2 Instruction Misses Per 1000: L2 instruction cache misses per thousand L2
                                I-cache references
                                1000 * PAPI_L2_ICM / PAPI_L2_ICA
Data TLB Misses Per 1000 LD/ST: D-TLB misses per thousand load stores
                                1000 * PAPI_TLB_DM / PAPI_LST_INS
Ins. TLB Misses Per 1000 ins. : I-TLB misses per thousand instructions
                                1000 * PAPI_TLB_IM / PAPI_TOT_INS
L1 Bandwidth MBytes per second: Effective cumulative L1 bandwidth achieved
                                (PAPI_LD_INS + $PAPI_SR_INS) * WORD_SIZE
                                / Wallclock usecs

Resource Stall Cycles %       : Percent of total cycles stalled for any resource
                                100 * PAPI_RES_STL / PAPI_TOT_CYC
Memory Stall Cycles %         : Percent of total cycles stalled for memory ops
                                100 * PAPI_MEM_SCY / PAPI_TOT_CYC
FP Stall Cycles %             : Percent of total cycles stalled for FP ops
                                100 * PAPI_FP_STAL / PAPI_TOT_CYC

No Issue Cycle %              : Percent of cycles with no issue
                                100 * PAPI_STL_ICY / PAPI_TOT_CYC
Full Issue Cycle %            : Percent of cycles with full issue
                                100 * PAPI_FUL_ICY / PAPI_TOT_CYC
FPU Idle Cycle %              : Percent of cycles where the FP unit was idle
                                100 * PAPI_FPU_IDL / PAPI_TOT_CYC
LSU Idle Cycle %              : Percent of cycles the load-store unit was idle
                                100 * PAPI_LSU_IDL / PAPI_TOT_CYC
Branch Misprediction %        : Percent of mispredicted branches
                                100 * PAPI_BR_MSP / PAPI_BR_INS
-------------------------------------------------------------------------------
Process (PID 29894) counts data:
Memory heap (at exit) KB .....................  2.54800e+03
Memory library (at exit) KB ..................  6.18800e+03
Memory locked (at exit) KB ...................  0.00000e+00
Memory resident max KB .......................  8.03200e+03
Memory shared (at exit) KB ...................  5.08400e+03
Memory stack (at exit) KB ....................  4.56000e+02
Memory text (at exit) KB .....................  1.60000e+01
PAPI_BR_CN ...................................  1.27282e+10
PAPI_BR_INS ..................................  2.04816e+10
PAPI_BR_MSP ..................................  8.69177e+08
PAPI_CA_INV ..................................  1.32693e+09
PAPI_FUL_ICY .................................  6.10758e+10
PAPI_L1_DCM ..................................  5.74276e+08
PAPI_L1_ICM ..................................  3.24863e+06
PAPI_L2_DCA ..................................  3.27097e+08
PAPI_L2_DCM ..................................  5.50546e+08
PAPI_L2_ICA ..................................  3.24863e+06
PAPI_L2_ICM ..................................  3.12974e+06
PAPI_LD_INS ..................................  6.28893e+10
PAPI_LST_INS .................................  8.85660e+10
PAPI_RES_STL .................................  1.59548e+11
PAPI_SR_INS ..................................  2.56766e+10
PAPI_STL_ICY .................................  4.82538e+09
PAPI_TLB_DM ..................................  4.94800e+04
PAPI_TLB_IM ..................................  1.16390e+05
PAPI_TOT_CYC .................................  2.62441e+11
PAPI_TOT_INS .................................  2.78085e+11
Real cycles ..................................  5.07121e+11
Real usecs ...................................  2.20487e+08
Virtual cycles ...............................  5.07331e+11
Virtual usecs ................................  2.20483e+08
Wallclock usecs ..............................  2.20490e+08

Event Descriptions:
PAPI_TOT_INS                  : Instructions completed
PAPI_LST_INS                  : Load/store instructions completed
PAPI_BR_INS                   : Branch instructions
PAPI_LD_INS                   : Load instructions
PAPI_SR_INS                   : Store instructions
PAPI_TOT_CYC                  : Total cycles
PAPI_RES_STL                  : Cycles stalled on any resource
PAPI_L1_DCM                   : Level 1 data cache misses
PAPI_L1_ICM                   : Level 1 instruction cache misses
PAPI_TLB_DM                   : Data translation lookaside buffer misses
PAPI_TLB_IM                   : Instruction translation lookaside buffer misses
PAPI_L2_DCM                   : Level 2 data cache misses
PAPI_L2_ICM                   : Level 2 instruction cache misses
PAPI_CA_INV                   : Requests for cache line invalidation
PAPI_STL_ICY                  : Cycles with no instruction issue
PAPI_FUL_ICY                  : Cycles with maximum instruction issue
PAPI_BR_CN                    : Conditional branch instructions
PAPI_BR_MSP                   : Conditional branch instructions mispredicted
PAPI_L2_DCA                   : Level 2 data cache accesses
PAPI_L2_ICA                   : Level 2 instruction cache accesses

Derived Metric Descriptions:

MFLOPS_wallclock = PAPI_FP_OPS/Wallclock_usecs
MFLOPS = PAPI_FP_OPS / Real_usecs
IPC = PAPI_TOT_INS / PAPI_TOT_CYC
Flops_Per_Load_Store = PAPI_FP_OPS / PAPI_LST_INS
Flops_Per_L1_Data_Cache_Miss = PAPI_FP_OPS / PAPI_L1_DCM
Load_Store_Ratio = PAPI_LD_INS / PAPI_SR_INS
Instructions_Per_Dcache_Miss = PAPI_TOT_INS / PAPI_L1_DCM

Time
Wallclock_seconds = Wallclock_usecs / 1000000
IO_seconds = IO_cycles / (clockmhz * 1000000)
No_Issue_Stall_seconds = PAPI_STL_ICY / (clockmhz * 1000000)
Resource_Stall_seconds = PAPI_RES_STL / (clockmhz * 1000000)
FP_Stall_seconds = PAPI_FP_OPS / (clockmhz * 1000000)
Memory_Stall_seconds = PAPI_MEM_SCY / (clockmhz * 1000000)
Max_L1_Miss_L2_Hit_Stall_seconds = (PAPI_LI_DCM - PAPI_L2_DCM) * L2_LATENCY / (clockmhz * 1000000)
Max_L2_Miss_L3_Hit_Stall_seconds = (PAPI_L2_DCM - PAPI_L3_DCM) * L3_LATENCY / (clockmhz * 1000000)
Max_Memory_Access_Stall_seconds = PAPI_L3_DCM* MEM_LATENCY / (clockmhz * 1000000)

Cycles
Cycles_In_Domain = PAPI_TOT_CYC
Real_Cycles = Real_cycles
Running_Time_In_Domain_Percent = 100 * PAPI_TOT_CYC / Real_cycles
Virtual_Cycles = Virtual_cycles
IO_Cycles_Percent = 100 * IO_cycles / Real_cycles
MPI_Cycles_Percent = 100 * MPI_cycles / Real_cycles
MPI_Sync_Cycles_Percent = 100 * MPI_Sync_cycles / Real_cycles
Thread_Sync_Cycles_Percent = 100 * Thr_Sync_cycles / Real_cycles

Instructions
Total_Instructions = PAPI_TOT_INS
Memory_Instructions_Percent = 100 * PAPI_LST_INS / PAPI_TOT_INS
Memory_Instructions_Percent = 100 * (PAPI_LD_INS + PAPI_SR_INS) / PAPI_TOT_INS unless (defined(Memory_Instructions_Percent))
FP_Instructions_Percent = 100 * PAPI_FP_INS / PAPI_TOT_INS
FP_Instructions_Percent_approx = 100 * PAPI_FP_OPS / PAPI_TOT_INS unless (defined(FP_Instructions_Percent))
Branch_Instructions_Percent = 100 * PAPI_BR_INS / PAPI_TOT_INS
Integer_Instructions_Percent = 100 * PAPI_INT_INS / PAPI_TOT_INS

Memory
Load_Store_Ratio = PAPI_LD_INS / PAPI_SR_INS
L1_Data_Misses_Per_1000_Load_Stores = 1000 * PAPI_L1_DCM / PAPI_LST_INS
L1_Data_Misses_Per_1000_Load_Stores = 1000 * PAPI_L1_DCM / PAPI_L1_DCA unless (defined(L1_Data_Misses_Per_1000_Load_Stores))
L1_Instruction_Misses_Per_1000_Instructions = 1000 * PAPI_L1_ICM / PAPI_TOT_INS
L2_Data_Misses_Per_1000_L2_Load_Stores = 1000 * PAPI_L2_DCM / PAPI_L2_DCA
L2_Instruction_Misses_Per_1000_L2_Instructions = 1000 * PAPI_L2_ICM / PAPI_L2_ICA
Data_TLB_Misses_Per_1000_Load_Stores = 1000 * PAPI_TLB_DM / PAPI_LST_INS
Instruction_TLB_Misses_Per_1000_Instructions = 1000 * PAPI_TLB_IM / PAPI_TOT_INS
L1_Bandwidth_MBytes_per_second = (PAPI_LD_INS + PAPI_SR_INS) * WORD_SIZE / Wallclock_usecs

Stalls
Resource_Stall_Cycles_Percent = 100 * PAPI_RES_STL / PAPI_TOT_CYC
Memory_Stall_Cycles_Percent = 100 * PAPI_MEM_SCY / PAPI_TOT_CYC
FP_Stall_Cycles_Percent = 100 * PAPI_FP_STAL / PAPI_TOT_CYC

No_Issue_Cycle_Percent = 100 * PAPI_STL_ICY / PAPI_TOT_CYC
Full_Issue_Cycle_Percent = 100 * PAPI_FUL_ICY / PAPI_TOT_CYC
FPU_Idle_Cycle_Percent = 100 * PAPI_FPU_IDL / PAPI_TOT_CYC
LSU_Idle_Cycle_Percent = 100 * PAPI_LSU_IDL / PAPI_TOT_CYC
Branch_Misprediction_Percent = 100 * PAPI_BR_MSP / PAPI_BR_INS

Arch Parameters
L2_LATENCY_IN_CYCLES = L2_LATENCY
L3_LATENCY_IN_CYCLES = L3_LATENCY
MEMORY_LATENCY_IN_CYCLES = MEM_LATENCY
WORD_SIZE_IN_BYTES = WORD_SIZE

-------------------------------------------------------------------------------
Default spec file (Id papi 359 2012-01-06 092117Z tushar )

Metric Descriptions
Unless mentioned otherwise, counts are accumulated across sub-processes/threads

MFLOPS wallclock               Millions of floating point ops per 
                                *wallclock* second
                                PAPI_FP_OPS/WALL_CLOCK_USEC
MFLOPS                         Millions of FP ops per second
                                PAPI_FP_OPS / Real_usecs
IPC                            Instructions retired per cycle
                                PAPI_TOT_INS / PAPI_TOT_CYC
Flops Per Load_Store           PAPI_FP_OPS / PAPI_LST_INS
Flops Per L1 Data Cache Miss   PAPI_FP_OPS / PAPI_L1_DCM
Load Store Ratio               Ratio of loads to stores.
                                PAPI_LD_INS / PAPI_SR_INS
Instructions Per Dcache Miss   PAPI_TOT_INS / PAPI_L1_DCM

Wallclock seconds              Unhalted wallclock time. Never counted twice.
                                WALL_CLOCK_USEC / 1000000
IO seconds                     Time spent in seconds doing I/O.
                                This includes any time in I/O, including time
                                outside domain, when the process is waiting
                                for I/O to complete.
                                IO cycles / (Clock Hz)
No Issue Stall seconds         Time in domain with no instruction issue.
                                This would not include cycles outside domain
                                such as system time or I/O time or time process
                                was not scheduled to run.
                                PAPI_STL_ICY / (Clock Hz)
Resource Stall seconds         Time in seconds stalled on any resource.
                                Resource can be an integer or FP register
                                or reservation station. It would not include
                                stalls waiting for memory operands.
                                PAPI_RES_STL / (Clock Hz)
FP Stall seconds               Floating-point stall seconds.
                                PAPI_FP_OPS / (Clock Hz)
Memory Stall seconds           Time in seconds waiting for memory operations.
                                PAPI_MEM_SCY / (Clock Hz)
Max L1 Miss L2 Hit Stall sec   Maximum time in stalls on L1 miss/L2 hits.
                                This is an estimate calculated using L1 and L2
                                cache hits and the L2 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                (PAPI_LI_DCM-PAPI_L2_DCM)*L2_LATENCY/(Clock Hz)
Max L2 Miss L3 Hit Stall sec   Maximum time in stalls on L2 miss/L3 hits.
                                This is an estimate calculated using L2 and L3
                                cache hits and the L3 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                (PAPI_L2_DCM-PAPI_L3_DCM)*L3_LATENCY/(Clock Hz)
Max Memory Access Stall_sec    Maximum time in stalls waiting on memory
                                This is an estimate calculated using L3 cache
                                misses and the L3 access latency. The actual
                                latency may have been masked by hit-under-miss
                                or instruction scheduling.
                                PAPI_L3_DCM * MEM_LATENCY / (Clock Hz)

Cycles In Domain               Total processor cycles in the PAPI domain 
                                PAPI_TOT_CYC. Note, this cycle counter is
                                more granular and accurate than Real or Virtual
                                cycles counter. This may lead to situations where
                                this value is measured as higher than even Real
                                cycles.
Real Cycles                    Always counted, unhalted.
Running Time In Domain %       Percent of processor time spent in the domain
                                100 * PAPI_TOT_CYC / Real cycles
Virtual Cycles                 Counted only when executing on the processor. 
IO Cycles %                    Percent of cycles spent in I/O
                                100 * IO cycles / Real cycles
MPI Cycles %                   Percent of cycles spent in MPI
                                100 * MPI cycles / Real cycles
MPI Sync Cycles %              Percent of cycles spent in MPI sync ops
                                100 * MPI Sync cycles / Real cycles
Thread Sync Cycles %           Percent of cycles spent in thread synchronization
                                100 * Thr Sync cycles / Real cycles

Total Instructions             Completed instructions
                                PAPI_TOT_INS
Memory Instructions %          Percent of instructions that are memory
                               100 * PAPI_LST_INS / PAPI_TOT_INS
                                or 100 * (PAPI_LD_INS + PAPI_SR_INS) / PAPI_TOT_INS
FP Instructions %              Percent of instructions that are floating point
                                100 * PAPI_FP_INS / PAPI_TOT_INS
FP Instructions % approx       Approximate FP instruction percent, using
                                FP ops instead of instructions
                                100 * PAPI_FP_OPS / PAPI_TOT_INS
Branch Instructions %          Percent of instructions that are branches
                                100 * PAPI_BR_INS / PAPI_TOT_INS
Integer Instructions %         Percent of instructions that are of integer type
                                100 * PAPI_INT_INS / PAPI_TOT_INS

Load Store Ratio               Ratio of loads to stores
                                PAPI_LD_INS / PAPI_SR_INS
L1 Data Misses Per 1000 LD/ST  L1 data misses per thousand L1 data references
                                1000 * PAPI_L1_DCM / PAPI_LST_INS
                                or 1000 * PAPI_L1_DCM / PAPI_L1_DCA
L1 Instruction Misses Per 1000 L1 I-cache misses per thousand instructions
                                1000 * PAPI_L1_ICM / PAPI_TOT_INS
L2 Data Misses Per 1000        L2 data cache misses per thousand L2 data references
                                1000 * PAPI_L2_DCM / PAPI_L2_DCA
L2 Instruction Misses Per 1000 L2 instruction cache misses per thousand L2
                                I-cache references
                                1000 * PAPI_L2_ICM / PAPI_L2_ICA
Data TLB Misses Per 1000 LD/ST D-TLB misses per thousand load stores
                                1000 * PAPI_TLB_DM / PAPI_LST_INS
Ins. TLB Misses Per 1000 ins.  I-TLB misses per thousand instructions
                                1000 * PAPI_TLB_IM / PAPI_TOT_INS
L1 Bandwidth MBytes per second Effective cumulative L1 bandwidth achieved
                                (PAPI_LD_INS + PAPI_SR_INS) * WORD_SIZE
                                / Wallclock usecs

Resource Stall Cycles %        Percent of total cycles stalled for any resource
                                100 * PAPI_RES_STL / PAPI_TOT_CYC
Memory Stall Cycles %          Percent of total cycles stalled for memory ops
                                100 * PAPI_MEM_SCY / PAPI_TOT_CYC
FP Stall Cycles %              Percent of total cycles stalled for FP ops
                                100 * PAPI_FP_STAL / PAPI_TOT_CYC

No Issue Cycle %               Percent of cycles with no issue
                                100 * PAPI_STL_ICY / PAPI_TOT_CYC
Full Issue Cycle %             Percent of cycles with full issue
                                100 * PAPI_FUL_ICY / PAPI_TOT_CYC
FPU Idle Cycle %               Percent of cycles where the FP unit was idle
                                100 * PAPI_FPU_IDL / PAPI_TOT_CYC
LSU Idle Cycle %               Percent of cycles the load-store unit was idle
                                100 * PAPI_LSU_IDL / PAPI_TOT_CYC
Branch Misprediction %         Percent of mispredicted branches
                                100 * PAPI_BR_MSP / PAPI_BR_INS
-------------------------------------------------------------------------------

